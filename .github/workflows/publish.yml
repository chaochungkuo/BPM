name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      repository:
        description: "Repository to publish from (default: current)"
        required: false
        default: ""

jobs:
  build:
    name: Build sdist/wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Verify version matches tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          TAG="${GITHUB_REF#refs/tags/v}"
          echo "Tag version: $TAG"
          PYVER=$(python -c "from pathlib import Path; ns={}; exec((Path('bpm')/'_version.py').read_text(), ns); print(ns.get('__version__',''))")
          echo "Package version: $PYVER"
          if [ "$TAG" != "$PYVER" ]; then
            echo "Version mismatch: tag v$TAG != bpm/_version.py $PYVER" >&2
            exit 1
          fi

      - name: Build
        run: |
          python -m build --sdist --wheel --outdir dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-testpypi:
    name: Publish to TestPyPI (pre-release)
    needs: build
    if: github.event_name == 'release' && github.event.release.prerelease == true
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # enable OIDC for Trusted Publishing
      contents: read
    environment: testpypi
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.10.0
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

  publish-pypi:
    name: Publish to PyPI
    needs: build
    if: github.event_name == 'release' && github.event.release.prerelease == false
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # enable OIDC for Trusted Publishing
      contents: read
    environment: pypi
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.10.0
        with:
          verbose: true
